
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_TecnicoLayout.cshtml";
    var ObtenerTotalServiciosPorTecnico = ViewBag.ObtenerTotalServiciosPorTecnico;
    var ObtenerTotalServiciosFaltaAprobarEstado = ViewBag.ObtenerTotalServiciosFaltaAprobarEstado;
    var ObtenerTotalServiciosEnProceso = ViewBag.ObtenerTotalServiciosEnProceso;
    var ObtenerTotalTipoEspecialidadPorTecnico = ViewBag.ObtenerTotalTipoEspecialidadPorTecnico;
    var datostec = ViewBag.datosgrafiTecnico;
    var datostec2 = ViewBag.datosgrafiTecnico2;
}


<div class="container-fluid">
    <!-- Page Heading -->
    <div class="d-sm-flex align-items-center justify-content-between mb-4">
        <h1 class="h3 mb-0 text-gray-800">Principal</h1>
    </div>


    <!-- Content Row -->
    <div class="row">
        <!-- Total de Servicios -->
        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card border-left-primary shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-primary text-uppercase mb-1">
                                Total de Servicios
                            </div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800" id="totalVenta">@ObtenerTotalServiciosPorTecnico</div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-briefcase  fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Total de Trabajos -->
        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card border-left-success shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-success text-uppercase mb-1">
                                TOTAL DE TRABAJOS
                            </div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800" id="totaltecnico">@ObtenerTotalServiciosFaltaAprobarEstado</div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-tools fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Servicios en Proceso -->
        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card border-left-info shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-success text-uppercase mb-1">
                                SERVICIOS EN PROCESO
                            </div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800" id="totalProductos">@ObtenerTotalServiciosEnProceso</div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-paper-plane fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>



        <!-- Total de Especialidades -->
        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card border-left-warning shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-warning text-uppercase mb-1">
                                TOTAL DE ESPECIALIDADES
                            </div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800" id="tecnicosdisponibles">@ObtenerTotalTipoEspecialidadPorTecnico</div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-cogs  fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Content Row -->

    <div class="row">

        <!-- Area Chart - Ventas de los ultimos 7 días -->
        <div class="col-xl-8 col-lg-7">
            <div class="card shadow mb-4">
                <!-- Card Header - Dropdown -->
                <div class="card-header py-3 bg-second-primary">
                    <h6 class="m-0 font-weight-bold text-white">Servicios con mayor calificación</h6>
                </div>
                <!-- Card Body -->
                <div class="card-body">
                    <div class="chart-area" style="height: 350px !important;">
                        <canvas id="charservicio"></canvas>
                    </div>
                </div>
            </div>
        </div>

        <!-- Pie Chart - Productos más vendidos-->
        <div class="col-xl-4 col-lg-5">
            <div class="card shadow mb-4">
                <!-- Card Header - Dropdown -->
                <div class="card-header py-3 bg-second-primary">
                    <h6 class="m-0 font-weight-bold text-white">Cantidad de Servicios según su estado</h6>
                </div>
                <!-- Card Body -->
                <div class="card-body">
                    <div class="chart-pie" style="height: 350px !important ;">
                        <canvas id="charCalificaciones"></canvas>
                    </div>
                </div>
            </div>
        </div>
    </div>

</div>


<script src="https://cdn.jsdelivr.net/npm/chart.js@4.4.0/dist/chart.umd.min.js"></script>




<script type="text/javascript">
    {
        const ctx = document.getElementById('charservicio');
        var datos1 = @Html.Raw(Json.Encode(datostec2));
        var dservicio = datos1.map(item => item.CodigoDescripcion);
        var scores = datos1.map(item => item.CantidadServicios);

        console.log(scores);

        new Chart(ctx, {
            type: 'bar', // Cambiado de 'bar' a 'horizontalBar'
            data: {
                labels: dservicio,
                datasets: [{                
                    label: 'Servicios',
                    data: scores,              
                    
                    backgroundColor: [
                        'rgba(75, 192, 192, 0.2)',
                        'rgba(255, 99, 132, 0.2)',
                        'rgba(255, 159, 64, 0.2)',
                        'rgba(255, 205, 86, 0.2)',
                        'rgba(54, 162, 235, 0.2)',
                        'rgba(153, 102, 255, 0.2)',
                        'rgba(201, 203, 207, 0.2)'
                    ],
                    borderColor: [
                        'rgb(75, 192, 192)',
                        'rgb(255, 99, 132)',
                        'rgb(255, 159, 64)',
                        'rgb(255, 205, 86)',
                        'rgb(54, 162, 235)',
                        'rgb(153, 102, 255)',
                        'rgb(201, 203, 207)'
                    ],
                    borderWidth: 1
                }]
            },
            
        });
    }

    {
        const ctx = document.getElementById('charCalificaciones');
        var datos2 = @Html.Raw(Json.Encode(datostec));

        function mapEstadoToNombre(estado) {
            switch (estado) {
                case 1:
                    return 'Pendiente';
                case 2:
                    return 'En Validación';
                case 3:
                    return 'En Proceso';
                case 4:
                    return 'Finalizado';
                case 5:
                    return 'Rechazado';
                default:
                    return 'Desconocido';
            }
        }

        var labels = datos2.map(item => mapEstadoToNombre(item.IdEstadoServicio));
        var cantidad = datos2.map(item => item.CantidadServicios);

        // Función para asignar colores según el estado
        function getColorByEstado(estado) {
            switch (estado) {
                case 'Pendiente':
                    return 'rgb(54, 162, 235)';
                case 'En Validación':
                    return 'rgb(255, 205, 86';
                case 'En Proceso':
                    return 'green';
                case 'Finalizado':
                    return 'rgb(255, 99, 132)';
                case 'Rechazado':
                    return 'gray';
                default:
                    return 'black'; // Puedes cambiar el color por defecto según tus preferencias
            }
        }

        var colores = labels.map(estado => getColorByEstado(estado));

        new Chart(ctx, {
            type: 'doughnut',
            data: {
                labels: labels,
                datasets: [{
                    label: 'Calificación',
                    data: cantidad,
                    backgroundColor: colores, // Asignar colores al conjunto de datos
                    hoverOffset: 4
                }]
            }
        });

    }

</script>
